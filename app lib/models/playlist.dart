import 'package:flutter/material.dart';
import 'recognition_history.dart';

enum PlaylistType {
  auto,
  favorites,
  recent,
  custom
}

class Playlist {
  final int? id;
  final String name;
  final String description;
  final PlaylistType type;
  final IconData icon;
  final Color color;
  final List<RecognitionHistory> songs;
  
  const Playlist({
    this.id,
    required this.name,
    required this.description,
    required this.type,
    required this.icon,
    required this.color,
    this.songs = const [],
  });

  factory Playlist.fromJson(Map<String, dynamic> json) {
    final List<dynamic> items = json['items'] ?? [];
    final List<RecognitionHistory> songs = items
        .map((item) => RecognitionHistory.fromJson(item['song']))
        .toList();

    // Determine playlist type
    PlaylistType type = PlaylistType.custom;
    
    return Playlist(
      id: json['id'],
      name: json['name'] ?? 'Unknown Playlist',
      description: json['description'] ?? '',
      type: type,
      icon: Icons.queue_music,
      color: Colors.blue,
      songs: songs,
    );
  }
  
  int get songCount => songs.length;
  
  // Create predefined playlists
  static Playlist autoGenerated() {
    return const Playlist(
      name: 'Auto-Generated',
      description: 'Songs similar to your recent recognitions',
      type: PlaylistType.auto,
      icon: Icons.auto_awesome,
      color: Colors.purple,
    );
  }
  
  static Playlist favorites() {
    return const Playlist(
      name: 'Favorites',
      description: 'Your liked songs',
      type: PlaylistType.favorites,
      icon: Icons.favorite,
      color: Colors.red,
    );
  }
  
  static Playlist recentlyRecognized() {
    return const Playlist(
      name: 'Recently Recognized',
      description: 'Your latest discoveries',
      type: PlaylistType.recent,
      icon: Icons.history,
      color: Colors.blue,
    );
  }
} 